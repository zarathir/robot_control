// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.49.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names

import "bridge_definitions.dart";
import 'dart:convert';
import 'dart:async';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'bridge_generated.dart';
export 'bridge_generated.dart';
import 'package:meta/meta.dart';

class RobotNodePlatform extends FlutterRustBridgeBase<RobotNodeWire>
    with FlutterRustBridgeSetupMixin {
  RobotNodePlatform(FutureOr<WasmModule> dylib) : super(RobotNodeWire(dylib)) {
    setupMixinConstructor();
  }
  Future<void> setup() => inner.init;
// Section: api2wire

  @protected
  String api2wire_String(String raw) {
    return raw;
  }

  @protected
  Uint8List api2wire_uint_8_list(Uint8List raw) {
    return raw;
  }
}

// Section: WASM wire module

@JS('wasm_bindgen')
external RobotNodeWasmModule get wasmModule;

@JS()
@anonymous
class RobotNodeWasmModule implements WasmModule {
  external Object /* Promise */ call([String? moduleName]);
  external RobotNodeWasmModule bind(dynamic thisArg, String moduleName);
  external void wire_node_handle(NativePortType port_, String url);

  external void wire_generate_twist(
      NativePortType port_, String topic, double x, double z);
}

// Section: WASM wire connector

class RobotNodeWire extends FlutterRustBridgeWasmWireBase<RobotNodeWasmModule> {
  RobotNodeWire(FutureOr<WasmModule> module)
      : super(WasmModule.cast<RobotNodeWasmModule>(module));

  void wire_node_handle(NativePortType port_, String url) =>
      wasmModule.wire_node_handle(port_, url);

  void wire_generate_twist(
          NativePortType port_, String topic, double x, double z) =>
      wasmModule.wire_generate_twist(port_, topic, x, z);
}
